#!/usr/bin/env bash
#
# Copyright 2019 asdf-aria2 authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

set -eo pipefail

fail() {
  echo -e "\e[31mFail:\e[m $*"
  exit 1
}

install_aria2() {
  local install_type=$1
  local version=$2
  local install_path=$3

  if [ "$install_type" != "version" ]; then
    fail "asdf-aria2 supports release installs only"
  fi

  local download_url="https://github.com/aria2/aria2/releases/download/release-${version}/aria2-${version}.tar.bz2"
  local source_path="${install_path}/aria2-src.tar.bz2"
  local build_path="${install_path}/aria2-src"

  case "$OSTYPE" in
    darwin*)
      # Check if pre-built binary exists (versions <= 1.35.0)
      local prebuilt_url="https://github.com/aria2/aria2/releases/download/release-${version}/aria2-${version}-osx-darwin.tar.bz2"
      if curl --silent --fail --head "$prebuilt_url" > /dev/null 2>&1; then
        download_url="$prebuilt_url"
        (
          echo "∗ Downloading and installing aria2..."
          curl --silent --location --create-dirs --output "$source_path" "$download_url" || fail "Could not download"
          tar -xjf "$source_path" -C "$install_path" --strip-components=1 || fail "Could not uncompress"
          echo "The installation was successful!"
          rm "$source_path"
        ) || (
          rm -rf "$install_path"
          fail "An error occurred"
        )
      else
        # Build from source for versions >= 1.36.0
        (
          echo "∗ Downloading aria2 source code..."
          curl --silent --location --output "$source_path" "$download_url" || fail "Could not download"
          mkdir -p "$build_path"
          tar -xjf "$source_path" -C "$build_path" --strip-components=1 || fail "Could not uncompress"
          
          echo "∗ Building aria2 from source (this may take a few minutes)..."
          cd "$build_path"
          ./configure --prefix="$install_path" --without-libxml2 --without-libexpat --without-sqlite3 || fail "Could not configure"
          make -j"$(sysctl -n hw.ncpu)" || fail "Could not build"
          make install || fail "Could not install"
          
          echo "The installation was successful!"
          cd /
          rm -rf "$source_path" "$build_path"
        ) || (
          rm -rf "$install_path"
          fail "An error occurred"
        )
      fi
      ;;
    linux*)
      (
        echo "∗ Downloading and installing aria2..."
        curl --silent --location --create-dirs --output "$source_path" "$download_url" || fail "Could not download"
        tar -xjf "$source_path" -C "$install_path" --strip-components=1 || fail "Could not uncompress"
        echo "The installation was successful!"
        rm "$source_path"
      ) || (
        rm -rf "$install_path"
        fail "An error occurred"
      )
      ;;
    *) fail "Unsupported platform" ;;
  esac
}

install_aria2 "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH"
